{"ast":null,"code":"import'./card.css';import React,{useState,useEffect}from'react';import{useStripe,useElements,CardNumberElement,CardExpiryElement,CardCvcElement}from'@stripe/react-stripe-js';import{useLocation,useNavigate}from\"react-router-dom\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheckCircle,faExclamationCircle}from'@fortawesome/free-solid-svg-icons';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const Card=()=>{var _location$state,_location$state2;const[loading,setLoading]=useState(false);const stripe=useStripe();const elements=useElements();const[error,setError]=useState(null);const[paymentMethodType,setPaymentMethodType]=useState('card');// Default to card payment\nconst[alertMessage,setAlertMessage]=useState(\"\");// State for alert message\nconst location=useLocation();const total=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.total)||0;const form=((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.form)||{};const navigate=useNavigate();const[fadeOut,setFadeOut]=useState(false);const loadCart=()=>JSON.parse(localStorage.getItem(\"cart\"))||[];const[cart]=useState(loadCart());const handleSubmit=async event=>{event.preventDefault();if(loading)return;// Prevent double clicks\nsetLoading(true);setError(null);setAlertMessage(\"\");if(!stripe||!elements){console.error('Stripe has not been initialized.');setLoading(false);return;}try{console.log('Creating payment intent...');const response=await fetch('http://localhost:4000/create-payment-intent',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({amount:total,paymentMethodType})});if(!response.ok){throw new Error(`Failed to create payment intent: ${response.statusText}`);}const{clientSecret}=await response.json();if(!clientSecret){throw new Error('Client secret is missing in the response.');}console.log('Client secret received:',clientSecret);let confirmResult;if(paymentMethodType==='card'){const cardNumberElement=elements.getElement(CardNumberElement);const cardExpiryElement=elements.getElement(CardExpiryElement);const cardCvcElement=elements.getElement(CardCvcElement);// Check if all elements are available\nif(!cardNumberElement||!cardExpiryElement||!cardCvcElement){setError('Card elements are not available.');setLoading(false);return;}confirmResult=await stripe.confirmCardPayment(clientSecret,{payment_method:{card:cardNumberElement}});}else if(['apple_pay','google_pay','klarna'].includes(paymentMethodType)){// Placeholder for handling other payment methods\nconsole.log(`Payment method type '${paymentMethodType}' selected, but not implemented.`);setError(`Payment method '${paymentMethodType}' is not yet supported.`);setLoading(false);return;}if(confirmResult&&confirmResult.error){console.error('Payment failed:',confirmResult.error.message);setError(confirmResult.error.message);}else if(confirmResult&&confirmResult.paymentIntent){console.log('Payment successful:',confirmResult.paymentIntent);setAlertMessage(`Payment successful: ${confirmResult.paymentIntent.id}`);await sendUserDataToServer(form,confirmResult.paymentIntent.id,cart);}else{console.error('Unexpected payment confirmation result:',confirmResult);setError('An unexpected error occurred during payment confirmation.');}}catch(err){console.error('Error in payment flow:',err.message);setError(err.message);}setLoading(false);};const sendUserDataToServer=async(userData,paymentIntentId,cart)=>{try{const response=await fetch('http://localhost:4000/record-payment',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({...userData,paymentIntentId,cart})});if(!response.ok){throw new Error(`Failed to record payment: ${response.statusText}`);}const result=await response.json();console.log('User data recorded successfully:',result);// Optionally navigate to a success page or show a confirmation message\nsetAlertMessage(` \"Payment recorded successfully!\" `);}catch(error){console.error('Error recording payment:',error);setError('Failed to record payment on server.');}};useEffect(()=>{if(alertMessage||error){const timer=setTimeout(()=>{setFadeOut(true);// Trigger fade out\nconst removeAlertTimer=setTimeout(()=>{setAlertMessage(\"\");// Clear the alert after fade out\nsetError(\"\");setFadeOut(false);// Reset fade out state\n},500);// Match this time with the CSS transition duration\nreturn()=>clearTimeout(removeAlertTimer);},5000);// Keep alert message visible for 5 seconds\nreturn()=>clearTimeout(timer);// Cleanup the timer on unmount\n}},[alertMessage,error]);return/*#__PURE__*/_jsxs(\"div\",{className:\"card-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-text\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"$\",total]}),/*#__PURE__*/_jsx(\"p\",{children:\"Payment\"})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"mt-2\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{className:\"label\",children:[\"Payment Method:\",/*#__PURE__*/_jsxs(\"div\",{className:\"payment-div\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"card\",defaultChecked:true}),/*#__PURE__*/_jsx(\"img\",{src:\"card.jpg\",alt:\"card\"}),\" Card\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"apple_pay\"}),/*#__PURE__*/_jsx(\"img\",{src:\"apple.png\",alt:\"apple\"}),\" Apple Pay\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"google_pay\"}),/*#__PURE__*/_jsx(\"img\",{src:\"google.png\",alt:\"google\"}),\" Google Pay\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"klarna\"}),/*#__PURE__*/_jsx(\"img\",{src:\"klarna.webp\",alt:\"klarna\"}),\" Klarna\"]})]})]}),paymentMethodType==='card'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"card-number\",children:\"Card Number\"}),/*#__PURE__*/_jsx(CardNumberElement,{id:\"card-number\",className:\"card-element full-width\",options:{style:{base:{fontSize:'16px',color:'#424770','::placeholder':{color:'#aab7c4'}},invalid:{color:'#9e2146'}}}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"card-expiry\",children:\"Expiry Date\"}),/*#__PURE__*/_jsx(CardExpiryElement,{id:\"card-expiry\",className:\"card-element\",options:{style:{base:{fontSize:'16px',color:'#424770','::placeholder':{color:'#aab7c4'}},invalid:{color:'#9e2146'}}}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"card-cvc\",children:\"CVV\"}),/*#__PURE__*/_jsx(CardCvcElement,{id:\"card-cvc\",className:\"card-element\",options:{style:{base:{fontSize:'16px',color:'#424770','::placeholder':{color:'#aab7c4'}},invalid:{color:'#9e2146'}}}})]}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",disabled:!stripe||loading,children:loading?'Processing...':`Pay Now $${total}`}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})]})]}),alertMessage&&/*#__PURE__*/_jsxs(\"div\",{className:`success-popup ${fadeOut?'success-popup-exit':''}`,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCheckCircle,color:\"green\",size:\"2x\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Payment Successful\"}),/*#__PURE__*/_jsx(\"p\",{children:alertMessage}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-1\",onClick:()=>navigate('/'),children:\" Home\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:`error ${fadeOut?'error-exit':''}`,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faExclamationCircle,color:\"red\",size:\"2x\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Payment Declined\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-1\",onClick:()=>setError(''),children:\" Try Again\"})]})]});};export default Card;","map":{"version":3,"names":["React","useState","useEffect","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","useLocation","useNavigate","FontAwesomeIcon","faCheckCircle","faExclamationCircle","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Card","_location$state","_location$state2","loading","setLoading","stripe","elements","error","setError","paymentMethodType","setPaymentMethodType","alertMessage","setAlertMessage","location","total","state","form","navigate","fadeOut","setFadeOut","loadCart","JSON","parse","localStorage","getItem","cart","handleSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","stringify","amount","ok","Error","statusText","clientSecret","json","confirmResult","cardNumberElement","getElement","cardExpiryElement","cardCvcElement","confirmCardPayment","payment_method","card","includes","message","paymentIntent","id","sendUserDataToServer","err","userData","paymentIntentId","result","timer","setTimeout","removeAlertTimer","clearTimeout","className","children","onSubmit","type","onChange","e","target","value","name","defaultChecked","src","alt","htmlFor","options","style","base","fontSize","color","invalid","disabled","icon","size","onClick"],"sources":["/Users/touchbar/Documents/GitHub/foodstuff-website/src/pages/card/card.js"],"sourcesContent":["import './card.css';\nimport React, { useState, useEffect } from 'react';\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Card = () => {\n    const [loading, setLoading] = useState(false);\n    const stripe = useStripe();\n    const elements = useElements();\n    const [error, setError] = useState(null);\n    const [paymentMethodType, setPaymentMethodType] = useState('card'); // Default to card payment\n    const [alertMessage, setAlertMessage] = useState(\"\"); // State for alert message\n    const location = useLocation();\n    const total = location.state?.total || 0;\n    const form = location.state?.form || {};\n    const navigate = useNavigate();\n    const [fadeOut, setFadeOut] = useState(false);\n    const loadCart = () => JSON.parse(localStorage.getItem(\"cart\")) || [];\n    const [cart] = useState(loadCart());\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (loading) return; // Prevent double clicks\n        setLoading(true);\n        setError(null);\n        setAlertMessage(\"\");\n\n        if (!stripe || !elements) {\n            console.error('Stripe has not been initialized.');\n            setLoading(false);\n            return;\n        }\n\n        try {\n            console.log('Creating payment intent...');\n            const response = await fetch('http://localhost:4000/create-payment-intent', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ amount: total, paymentMethodType }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to create payment intent: ${response.statusText}`);\n            }\n\n            const { clientSecret } = await response.json();\n            if (!clientSecret) {\n                throw new Error('Client secret is missing in the response.');\n            }\n\n            console.log('Client secret received:', clientSecret);\n\n            let confirmResult;\n\n            if (paymentMethodType === 'card') {\n                const cardNumberElement = elements.getElement(CardNumberElement);\n                const cardExpiryElement = elements.getElement(CardExpiryElement);\n                const cardCvcElement = elements.getElement(CardCvcElement);\n\n                // Check if all elements are available\n                if (!cardNumberElement || !cardExpiryElement || !cardCvcElement) {\n                    setError('Card elements are not available.');\n                    setLoading(false);\n                    return;\n                }\n\n                confirmResult = await stripe.confirmCardPayment(clientSecret, {\n                    payment_method: {\n                        card: cardNumberElement,\n                    },\n                });\n            } else if (['apple_pay', 'google_pay', 'klarna'].includes(paymentMethodType)) {\n                // Placeholder for handling other payment methods\n                console.log(`Payment method type '${paymentMethodType}' selected, but not implemented.`);\n                setError(`Payment method '${paymentMethodType}' is not yet supported.`);\n                setLoading(false);\n                return;\n            }\n\n            if (confirmResult && confirmResult.error) {\n                console.error('Payment failed:', confirmResult.error.message);\n                setError(confirmResult.error.message);\n            } else if (confirmResult && confirmResult.paymentIntent) {\n                console.log('Payment successful:', confirmResult.paymentIntent);\n                setAlertMessage(`Payment successful: ${confirmResult.paymentIntent.id}`);\n                await sendUserDataToServer(form, confirmResult.paymentIntent.id, cart);\n\n            } else {\n                console.error('Unexpected payment confirmation result:', confirmResult);\n                setError('An unexpected error occurred during payment confirmation.');\n            }\n        } catch (err) {\n            console.error('Error in payment flow:', err.message);\n            setError(err.message);\n        }\n        setLoading(false);\n    };\n\n    const sendUserDataToServer = async (userData, paymentIntentId, cart) => {\n        try {\n            const response = await fetch('http://localhost:4000/record-payment', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ ...userData, paymentIntentId, cart }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to record payment: ${response.statusText}`);\n            }\n\n            const result = await response.json();\n            console.log('User data recorded successfully:', result);\n            // Optionally navigate to a success page or show a confirmation message\n            setAlertMessage(` \"Payment recorded successfully!\" `);\n    \n\n        } catch (error) {\n            console.error('Error recording payment:', error);\n            setError('Failed to record payment on server.');\n        }\n    };\n\n\n    useEffect(() => {\n        if (alertMessage || error) {\n            const timer = setTimeout(() => {\n                setFadeOut(true); // Trigger fade out\n                const removeAlertTimer = setTimeout(() => {\n                    setAlertMessage(\"\"); // Clear the alert after fade out\n                    setError(\"\");\n                    setFadeOut(false); // Reset fade out state\n                }, 500); // Match this time with the CSS transition duration\n\n                return () => clearTimeout(removeAlertTimer);\n            }, 5000); // Keep alert message visible for 5 seconds\n\n            return () => clearTimeout(timer); // Cleanup the timer on unmount\n        }\n    }, [alertMessage, error]);\n\n    return (\n        <div className='card-section'>\n            <div className='card-wrapper'>\n                <div className='card-text'>\n                    <p>${total}</p>\n                    <p>Payment</p>\n                </div>\n\n                <form className='mt-2' onSubmit={handleSubmit}>\n                    <label className='label'>\n                        Payment Method:\n                        <div className='payment-div'>\n                            <div>\n                                <input\n                                    type='radio'\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\n                                    name='paymentMethod'\n                                    value='card'\n                                    defaultChecked\n                                />\n                                <img src='card.jpg' alt='card' /> Card\n                            </div>\n                            <div>\n                                <input\n                                    type='radio'\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\n                                    name='paymentMethod'\n                                    value='apple_pay'\n                                />\n                                <img src='apple.png' alt='apple' /> Apple Pay\n                            </div>\n                            <div>\n                                <input\n                                    type='radio'\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\n                                    name='paymentMethod'\n                                    value='google_pay'\n                                />\n                                <img src='google.png' alt='google' /> Google Pay\n                            </div>\n                            <div>\n                                <input\n                                    type='radio'\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\n                                    name='paymentMethod'\n                                    value='klarna'\n                                />\n                                <img src='klarna.webp' alt='klarna' /> Klarna\n                            </div>\n                        </div>\n                    </label>\n\n                    {paymentMethodType === 'card' && (\n                        <>\n                            <label htmlFor=\"card-number\">Card Number</label>\n                            <CardNumberElement\n                                id=\"card-number\"\n                                className=\"card-element full-width\"\n                                options={{\n                                    style: {\n                                        base: {\n                                            fontSize: '16px',\n                                            color: '#424770',\n                                            '::placeholder': {\n                                                color: '#aab7c4',\n                                            },\n                                        },\n                                        invalid: {\n                                            color: '#9e2146',\n                                        },\n                                    },\n                                }}\n                            />\n\n                            <label htmlFor=\"card-expiry\">Expiry Date</label>\n                            <CardExpiryElement\n                                id=\"card-expiry\"\n                                className=\"card-element\"\n                                options={{\n                                    style: {\n                                        base: {\n                                            fontSize: '16px',\n                                            color: '#424770',\n                                            '::placeholder': {\n                                                color: '#aab7c4',\n                                            },\n                                        },\n                                        invalid: {\n                                            color: '#9e2146',\n                                        },\n                                    },\n                                }}\n                            />\n\n                            <label htmlFor=\"card-cvc\">CVV</label>\n                            <CardCvcElement\n                                id=\"card-cvc\"\n                                className=\"card-element\"\n                                options={{\n                                    style: {\n                                        base: {\n                                            fontSize: '16px',\n                                            color: '#424770',\n                                            '::placeholder': {\n                                                color: '#aab7c4',\n                                            },\n                                        },\n                                        invalid: {\n                                            color: '#9e2146',\n                                        },\n                                    },\n                                }}\n                            />\n                        </>\n                    )}\n                    <button className='button' type=\"submit\" disabled={!stripe || loading}>\n                        {loading ? 'Processing...' : `Pay Now $${total}`}\n                    </button>\n                    {error && <div className='error'>{error}</div>}\n                </form>\n            </div>\n\n            {alertMessage && (\n                <div className={`success-popup ${fadeOut ? 'success-popup-exit' : ''}`}>\n                    <FontAwesomeIcon icon={faCheckCircle} color=\"green\" size=\"2x\" />\n                    <p>Payment Successful</p>\n                    <p>{alertMessage}</p>\n                    <button className='mt-1' onClick={() => navigate('/')}> Home</button>\n                </div>\n            )}\n\n            {error && (\n                <div className={`error ${fadeOut ? 'error-exit' : ''}`}>\n                    <FontAwesomeIcon icon={faExclamationCircle} color=\"red\" size=\"2x\" />\n                    <p>Payment Declined</p>\n                    <p>{error}</p>\n                    <button className='mt-1' onClick={() => setError('')}> Try Again</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Card;\n"],"mappings":"AAAA,MAAO,YAAY,CACnB,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,WAAW,CAAEC,iBAAiB,CAAEC,iBAAiB,CAAEC,cAAc,KAAQ,yBAAyB,CACtH,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,eAAe,KAAQ,gCAAgC,CAChE,OAASC,aAAa,CAAEC,mBAAmB,KAAQ,mCAAmC,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvF,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,KAAAC,eAAA,CAAAC,gBAAA,CACf,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAAuB,MAAM,CAAGrB,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAAsB,QAAQ,CAAGrB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACsB,KAAK,CAAEC,QAAQ,CAAC,CAAG1B,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAC2B,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG5B,QAAQ,CAAC,MAAM,CAAC,CAAE;AACpE,KAAM,CAAC6B,YAAY,CAAEC,eAAe,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CAAE;AACtD,KAAM,CAAA+B,QAAQ,CAAGxB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAyB,KAAK,CAAG,EAAAb,eAAA,CAAAY,QAAQ,CAACE,KAAK,UAAAd,eAAA,iBAAdA,eAAA,CAAgBa,KAAK,GAAI,CAAC,CACxC,KAAM,CAAAE,IAAI,CAAG,EAAAd,gBAAA,CAAAW,QAAQ,CAACE,KAAK,UAAAb,gBAAA,iBAAdA,gBAAA,CAAgBc,IAAI,GAAI,CAAC,CAAC,CACvC,KAAM,CAAAC,QAAQ,CAAG3B,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAC4B,OAAO,CAAEC,UAAU,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAAsC,QAAQ,CAAGA,CAAA,GAAMC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAI,EAAE,CACrE,KAAM,CAACC,IAAI,CAAC,CAAG3C,QAAQ,CAACsC,QAAQ,CAAC,CAAC,CAAC,CAEnC,KAAM,CAAAM,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CAClCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,GAAIzB,OAAO,CAAE,OAAQ;AACrBC,UAAU,CAAC,IAAI,CAAC,CAChBI,QAAQ,CAAC,IAAI,CAAC,CACdI,eAAe,CAAC,EAAE,CAAC,CAEnB,GAAI,CAACP,MAAM,EAAI,CAACC,QAAQ,CAAE,CACtBuB,OAAO,CAACtB,KAAK,CAAC,kCAAkC,CAAC,CACjDH,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CAEA,GAAI,CACAyB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6CAA6C,CAAE,CACxEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEd,IAAI,CAACe,SAAS,CAAC,CAAEC,MAAM,CAAEvB,KAAK,CAAEL,iBAAkB,CAAC,CAC7D,CAAC,CAAC,CAEF,GAAI,CAACsB,QAAQ,CAACO,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,oCAAoCR,QAAQ,CAACS,UAAU,EAAE,CAAC,CAC9E,CAEA,KAAM,CAAEC,YAAa,CAAC,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAC9C,GAAI,CAACD,YAAY,CAAE,CACf,KAAM,IAAI,CAAAF,KAAK,CAAC,2CAA2C,CAAC,CAChE,CAEAV,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEW,YAAY,CAAC,CAEpD,GAAI,CAAAE,aAAa,CAEjB,GAAIlC,iBAAiB,GAAK,MAAM,CAAE,CAC9B,KAAM,CAAAmC,iBAAiB,CAAGtC,QAAQ,CAACuC,UAAU,CAAC3D,iBAAiB,CAAC,CAChE,KAAM,CAAA4D,iBAAiB,CAAGxC,QAAQ,CAACuC,UAAU,CAAC1D,iBAAiB,CAAC,CAChE,KAAM,CAAA4D,cAAc,CAAGzC,QAAQ,CAACuC,UAAU,CAACzD,cAAc,CAAC,CAE1D;AACA,GAAI,CAACwD,iBAAiB,EAAI,CAACE,iBAAiB,EAAI,CAACC,cAAc,CAAE,CAC7DvC,QAAQ,CAAC,kCAAkC,CAAC,CAC5CJ,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CAEAuC,aAAa,CAAG,KAAM,CAAAtC,MAAM,CAAC2C,kBAAkB,CAACP,YAAY,CAAE,CAC1DQ,cAAc,CAAE,CACZC,IAAI,CAAEN,iBACV,CACJ,CAAC,CAAC,CACN,CAAC,IAAM,IAAI,CAAC,WAAW,CAAE,YAAY,CAAE,QAAQ,CAAC,CAACO,QAAQ,CAAC1C,iBAAiB,CAAC,CAAE,CAC1E;AACAoB,OAAO,CAACC,GAAG,CAAC,wBAAwBrB,iBAAiB,kCAAkC,CAAC,CACxFD,QAAQ,CAAC,mBAAmBC,iBAAiB,yBAAyB,CAAC,CACvEL,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CAEA,GAAIuC,aAAa,EAAIA,aAAa,CAACpC,KAAK,CAAE,CACtCsB,OAAO,CAACtB,KAAK,CAAC,iBAAiB,CAAEoC,aAAa,CAACpC,KAAK,CAAC6C,OAAO,CAAC,CAC7D5C,QAAQ,CAACmC,aAAa,CAACpC,KAAK,CAAC6C,OAAO,CAAC,CACzC,CAAC,IAAM,IAAIT,aAAa,EAAIA,aAAa,CAACU,aAAa,CAAE,CACrDxB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEa,aAAa,CAACU,aAAa,CAAC,CAC/DzC,eAAe,CAAC,uBAAuB+B,aAAa,CAACU,aAAa,CAACC,EAAE,EAAE,CAAC,CACxE,KAAM,CAAAC,oBAAoB,CAACvC,IAAI,CAAE2B,aAAa,CAACU,aAAa,CAACC,EAAE,CAAE7B,IAAI,CAAC,CAE1E,CAAC,IAAM,CACHI,OAAO,CAACtB,KAAK,CAAC,yCAAyC,CAAEoC,aAAa,CAAC,CACvEnC,QAAQ,CAAC,2DAA2D,CAAC,CACzE,CACJ,CAAE,MAAOgD,GAAG,CAAE,CACV3B,OAAO,CAACtB,KAAK,CAAC,wBAAwB,CAAEiD,GAAG,CAACJ,OAAO,CAAC,CACpD5C,QAAQ,CAACgD,GAAG,CAACJ,OAAO,CAAC,CACzB,CACAhD,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CAED,KAAM,CAAAmD,oBAAoB,CAAG,KAAAA,CAAOE,QAAQ,CAAEC,eAAe,CAAEjC,IAAI,GAAK,CACpE,GAAI,CACA,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sCAAsC,CAAE,CACjEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEd,IAAI,CAACe,SAAS,CAAC,CAAE,GAAGqB,QAAQ,CAAEC,eAAe,CAAEjC,IAAK,CAAC,CAC/D,CAAC,CAAC,CAEF,GAAI,CAACM,QAAQ,CAACO,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6BR,QAAQ,CAACS,UAAU,EAAE,CAAC,CACvE,CAEA,KAAM,CAAAmB,MAAM,CAAG,KAAM,CAAA5B,QAAQ,CAACW,IAAI,CAAC,CAAC,CACpCb,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAE6B,MAAM,CAAC,CACvD;AACA/C,eAAe,CAAC,oCAAoC,CAAC,CAGzD,CAAE,MAAOL,KAAK,CAAE,CACZsB,OAAO,CAACtB,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDC,QAAQ,CAAC,qCAAqC,CAAC,CACnD,CACJ,CAAC,CAGDzB,SAAS,CAAC,IAAM,CACZ,GAAI4B,YAAY,EAAIJ,KAAK,CAAE,CACvB,KAAM,CAAAqD,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC3B1C,UAAU,CAAC,IAAI,CAAC,CAAE;AAClB,KAAM,CAAA2C,gBAAgB,CAAGD,UAAU,CAAC,IAAM,CACtCjD,eAAe,CAAC,EAAE,CAAC,CAAE;AACrBJ,QAAQ,CAAC,EAAE,CAAC,CACZW,UAAU,CAAC,KAAK,CAAC,CAAE;AACvB,CAAC,CAAE,GAAG,CAAC,CAAE;AAET,MAAO,IAAM4C,YAAY,CAACD,gBAAgB,CAAC,CAC/C,CAAC,CAAE,IAAI,CAAC,CAAE;AAEV,MAAO,IAAMC,YAAY,CAACH,KAAK,CAAC,CAAE;AACtC,CACJ,CAAC,CAAE,CAACjD,YAAY,CAAEJ,KAAK,CAAC,CAAC,CAEzB,mBACIZ,KAAA,QAAKqE,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzBtE,KAAA,QAAKqE,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzBtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBtE,KAAA,MAAAsE,QAAA,EAAG,GAAC,CAACnD,KAAK,EAAI,CAAC,cACfjB,IAAA,MAAAoE,QAAA,CAAG,SAAO,CAAG,CAAC,EACb,CAAC,cAENtE,KAAA,SAAMqE,SAAS,CAAC,MAAM,CAACE,QAAQ,CAAExC,YAAa,CAAAuC,QAAA,eAC1CtE,KAAA,UAAOqE,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAC,iBAErB,cAAAtE,KAAA,QAAKqE,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBtE,KAAA,QAAAsE,QAAA,eACIpE,IAAA,UACIsE,IAAI,CAAC,OAAO,CACZC,QAAQ,CAAGC,CAAC,EAAK3D,oBAAoB,CAAC2D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACtDC,IAAI,CAAC,eAAe,CACpBD,KAAK,CAAC,MAAM,CACZE,cAAc,MACjB,CAAC,cACF5E,IAAA,QAAK6E,GAAG,CAAC,UAAU,CAACC,GAAG,CAAC,MAAM,CAAE,CAAC,QACrC,EAAK,CAAC,cACNhF,KAAA,QAAAsE,QAAA,eACIpE,IAAA,UACIsE,IAAI,CAAC,OAAO,CACZC,QAAQ,CAAGC,CAAC,EAAK3D,oBAAoB,CAAC2D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACtDC,IAAI,CAAC,eAAe,CACpBD,KAAK,CAAC,WAAW,CACpB,CAAC,cACF1E,IAAA,QAAK6E,GAAG,CAAC,WAAW,CAACC,GAAG,CAAC,OAAO,CAAE,CAAC,aACvC,EAAK,CAAC,cACNhF,KAAA,QAAAsE,QAAA,eACIpE,IAAA,UACIsE,IAAI,CAAC,OAAO,CACZC,QAAQ,CAAGC,CAAC,EAAK3D,oBAAoB,CAAC2D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACtDC,IAAI,CAAC,eAAe,CACpBD,KAAK,CAAC,YAAY,CACrB,CAAC,cACF1E,IAAA,QAAK6E,GAAG,CAAC,YAAY,CAACC,GAAG,CAAC,QAAQ,CAAE,CAAC,cACzC,EAAK,CAAC,cACNhF,KAAA,QAAAsE,QAAA,eACIpE,IAAA,UACIsE,IAAI,CAAC,OAAO,CACZC,QAAQ,CAAGC,CAAC,EAAK3D,oBAAoB,CAAC2D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACtDC,IAAI,CAAC,eAAe,CACpBD,KAAK,CAAC,QAAQ,CACjB,CAAC,cACF1E,IAAA,QAAK6E,GAAG,CAAC,aAAa,CAACC,GAAG,CAAC,QAAQ,CAAE,CAAC,UAC1C,EAAK,CAAC,EACL,CAAC,EACH,CAAC,CAEPlE,iBAAiB,GAAK,MAAM,eACzBd,KAAA,CAAAI,SAAA,EAAAkE,QAAA,eACIpE,IAAA,UAAO+E,OAAO,CAAC,aAAa,CAAAX,QAAA,CAAC,aAAW,CAAO,CAAC,cAChDpE,IAAA,CAACX,iBAAiB,EACdoE,EAAE,CAAC,aAAa,CAChBU,SAAS,CAAC,yBAAyB,CACnCa,OAAO,CAAE,CACLC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,SAAS,CAChB,eAAe,CAAE,CACbA,KAAK,CAAE,SACX,CACJ,CAAC,CACDC,OAAO,CAAE,CACLD,KAAK,CAAE,SACX,CACJ,CACJ,CAAE,CACL,CAAC,cAEFpF,IAAA,UAAO+E,OAAO,CAAC,aAAa,CAAAX,QAAA,CAAC,aAAW,CAAO,CAAC,cAChDpE,IAAA,CAACV,iBAAiB,EACdmE,EAAE,CAAC,aAAa,CAChBU,SAAS,CAAC,cAAc,CACxBa,OAAO,CAAE,CACLC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,SAAS,CAChB,eAAe,CAAE,CACbA,KAAK,CAAE,SACX,CACJ,CAAC,CACDC,OAAO,CAAE,CACLD,KAAK,CAAE,SACX,CACJ,CACJ,CAAE,CACL,CAAC,cAEFpF,IAAA,UAAO+E,OAAO,CAAC,UAAU,CAAAX,QAAA,CAAC,KAAG,CAAO,CAAC,cACrCpE,IAAA,CAACT,cAAc,EACXkE,EAAE,CAAC,UAAU,CACbU,SAAS,CAAC,cAAc,CACxBa,OAAO,CAAE,CACLC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,SAAS,CAChB,eAAe,CAAE,CACbA,KAAK,CAAE,SACX,CACJ,CAAC,CACDC,OAAO,CAAE,CACLD,KAAK,CAAE,SACX,CACJ,CACJ,CAAE,CACL,CAAC,EACJ,CACL,cACDpF,IAAA,WAAQmE,SAAS,CAAC,QAAQ,CAACG,IAAI,CAAC,QAAQ,CAACgB,QAAQ,CAAE,CAAC9E,MAAM,EAAIF,OAAQ,CAAA8D,QAAA,CACjE9D,OAAO,CAAG,eAAe,CAAG,YAAYW,KAAK,EAAE,CAC5C,CAAC,CACRP,KAAK,eAAIV,IAAA,QAAKmE,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAE1D,KAAK,CAAM,CAAC,EAC5C,CAAC,EACN,CAAC,CAELI,YAAY,eACThB,KAAA,QAAKqE,SAAS,CAAE,iBAAiB9C,OAAO,CAAG,oBAAoB,CAAG,EAAE,EAAG,CAAA+C,QAAA,eACnEpE,IAAA,CAACN,eAAe,EAAC6F,IAAI,CAAE5F,aAAc,CAACyF,KAAK,CAAC,OAAO,CAACI,IAAI,CAAC,IAAI,CAAE,CAAC,cAChExF,IAAA,MAAAoE,QAAA,CAAG,oBAAkB,CAAG,CAAC,cACzBpE,IAAA,MAAAoE,QAAA,CAAItD,YAAY,CAAI,CAAC,cACrBd,IAAA,WAAQmE,SAAS,CAAC,MAAM,CAACsB,OAAO,CAAEA,CAAA,GAAMrE,QAAQ,CAAC,GAAG,CAAE,CAAAgD,QAAA,CAAC,OAAK,CAAQ,CAAC,EACpE,CACR,CAEA1D,KAAK,eACFZ,KAAA,QAAKqE,SAAS,CAAE,SAAS9C,OAAO,CAAG,YAAY,CAAG,EAAE,EAAG,CAAA+C,QAAA,eACnDpE,IAAA,CAACN,eAAe,EAAC6F,IAAI,CAAE3F,mBAAoB,CAACwF,KAAK,CAAC,KAAK,CAACI,IAAI,CAAC,IAAI,CAAE,CAAC,cACpExF,IAAA,MAAAoE,QAAA,CAAG,kBAAgB,CAAG,CAAC,cACvBpE,IAAA,MAAAoE,QAAA,CAAI1D,KAAK,CAAI,CAAC,cACdV,IAAA,WAAQmE,SAAS,CAAC,MAAM,CAACsB,OAAO,CAAEA,CAAA,GAAM9E,QAAQ,CAAC,EAAE,CAAE,CAAAyD,QAAA,CAAC,YAAU,CAAQ,CAAC,EACxE,CACR,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjE,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}