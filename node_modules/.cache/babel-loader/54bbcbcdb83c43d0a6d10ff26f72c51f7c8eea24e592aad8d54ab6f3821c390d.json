{"ast":null,"code":"import React,{useState}from\"react\";import{FaChevronDown,FaChevronUp}from\"react-icons/fa\";import\"./country.css\";import{countryStateData}from\"./countryStateData\";// Sample data for countries and states\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Country(){const[search,setSearch]=useState(\"\");const[filteredCountries,setFilteredCountries]=useState(Object.keys(countryStateData));const[selectedCountry,setSelectedCountry]=useState(\"\");const[states,setStates]=useState([]);const[selectedState,setSelectedState]=useState(\"\");const[dropdownVisible,setDropdownVisible]=useState(false);const[stateDropdownVisible,setStateDropdownVisible]=useState(false);// Handle search in country dropdown\nconst handleSearch=e=>{const value=e.target.value.toLowerCase();setSearch(value);setFilteredCountries(Object.keys(countryStateData).filter(country=>country.toLowerCase().includes(value)));};// Toggle dropdown visibility\nconst toggleDropdown=()=>{setDropdownVisible(!dropdownVisible);};// Handle country selection\nconst handleCountrySelect=country=>{setSearch(country);setSelectedCountry(country);setStates(countryStateData[country]||[]);setSelectedState(\"\");setDropdownVisible(false);setStateDropdownVisible(false);// Reset state dropdown visibility\n};// Handle state selection\nconst handleStateSelect=state=>{setSelectedState(state);setStateDropdownVisible(false);};// Toggle state dropdown visibility\nconst toggleStateDropdown=()=>{setStateDropdownVisible(!stateDropdownVisible);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:search,onChange:handleSearch,onFocus:()=>setDropdownVisible(true),onBlur:()=>setTimeout(()=>setDropdownVisible(false),100),placeholder:\"Search for a country...\",className:\"dropdown-input p-2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleDropdown,type:\"button\",className:\"dropdown-toggle\",children:dropdownVisible?/*#__PURE__*/_jsx(FaChevronUp,{}):/*#__PURE__*/_jsx(FaChevronDown,{})})]}),dropdownVisible&&filteredCountries.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"dropdown-list\",children:filteredCountries.map((country,index)=>/*#__PURE__*/_jsx(\"li\",{value:selectedCountry,onClick:()=>handleCountrySelect(country),className:\"dropdown-item\",children:country},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container mt-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedState,onClick:toggleStateDropdown,placeholder:\"Select a state/region...\",readOnly:true,className:\"dropdown-input p-2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleStateDropdown,type:\"button\",className:\"dropdown-toggle\",children:stateDropdownVisible?/*#__PURE__*/_jsx(FaChevronUp,{}):/*#__PURE__*/_jsx(FaChevronDown,{})})]}),stateDropdownVisible&&states.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"dropdown-list\",children:states.map((state,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleStateSelect(state),className:\"dropdown-item\",children:state},index))})]});}","map":{"version":3,"names":["React","useState","FaChevronDown","FaChevronUp","countryStateData","jsx","_jsx","jsxs","_jsxs","Country","search","setSearch","filteredCountries","setFilteredCountries","Object","keys","selectedCountry","setSelectedCountry","states","setStates","selectedState","setSelectedState","dropdownVisible","setDropdownVisible","stateDropdownVisible","setStateDropdownVisible","handleSearch","e","value","target","toLowerCase","filter","country","includes","toggleDropdown","handleCountrySelect","handleStateSelect","state","toggleStateDropdown","className","children","type","onChange","onFocus","onBlur","setTimeout","placeholder","onClick","length","map","index","readOnly"],"sources":["/Users/touchbar/Documents/GitHub/foodstuff-website/src/component/search/country.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"./country.css\";\nimport {countryStateData} from \"./countryStateData\";\n\n// Sample data for countries and states\n\nexport default function Country() {\n    const [search, setSearch] = useState(\"\");\n    const [filteredCountries, setFilteredCountries] = useState(Object.keys(countryStateData));\n    const [selectedCountry, setSelectedCountry] = useState(\"\");\n    const [states, setStates] = useState([]);\n    const [selectedState, setSelectedState] = useState(\"\");\n    const [dropdownVisible, setDropdownVisible] = useState(false);\n    const [stateDropdownVisible, setStateDropdownVisible] = useState(false);\n\n    // Handle search in country dropdown\n    const handleSearch = (e) => {\n        const value = e.target.value.toLowerCase();\n        setSearch(value);\n        setFilteredCountries(\n            Object.keys(countryStateData).filter((country) =>\n                country.toLowerCase().includes(value)\n            )\n        );\n    };\n\n    // Toggle dropdown visibility\n    const toggleDropdown = () => {\n        setDropdownVisible(!dropdownVisible);\n    };\n\n    // Handle country selection\n    const handleCountrySelect = (country) => {\n        setSearch(country);\n        setSelectedCountry(country);\n        setStates(countryStateData[country] || []);\n        setSelectedState(\"\");\n        setDropdownVisible(false);\n        setStateDropdownVisible(false); // Reset state dropdown visibility\n    };\n\n    // Handle state selection\n    const handleStateSelect = (state) => {\n        setSelectedState(state);\n        setStateDropdownVisible(false);\n    };\n\n    // Toggle state dropdown visibility\n    const toggleStateDropdown = () => {\n        setStateDropdownVisible(!stateDropdownVisible);\n    };\n\n    return (\n        <div className=\"dropdown-wrapper\">\n            {/* Country Dropdown */}\n            <div className=\"input-container\">\n                <input\n                    type=\"text\"\n                    value={search}\n                    onChange={handleSearch}\n                    onFocus={() => setDropdownVisible(true)}\n                    onBlur={() => setTimeout(() => setDropdownVisible(false), 100)}\n                    placeholder=\"Search for a country...\"\n                    className=\"dropdown-input p-2\"\n                />\n                <button\n                    onClick={toggleDropdown}\n                    type=\"button\"\n                    className=\"dropdown-toggle\"\n                >\n                    {dropdownVisible ? <FaChevronUp /> : <FaChevronDown />}\n                </button>\n            </div>\n            {dropdownVisible && filteredCountries.length > 0 && (\n                <ul className=\"dropdown-list\">\n                    {filteredCountries.map((country, index) => (\n                        <li\n                        value={selectedCountry}\n                            key={index}\n                            onClick={() => handleCountrySelect(country)}\n                            className=\"dropdown-item\"\n                        >\n                            {country}\n                        </li>\n                    ))}\n                </ul>\n            )}\n\n            {/* State Dropdown */}\n        \n                <div className=\"input-container mt-2\">\n                    <input\n                        type=\"text\"\n                        value={selectedState}\n                        onClick={toggleStateDropdown}\n                        placeholder=\"Select a state/region...\"\n                        readOnly\n                        className=\"dropdown-input p-2\"\n                    />\n                    <button\n                        onClick={toggleStateDropdown}\n                        type=\"button\"\n                        className=\"dropdown-toggle\"\n                    >\n                        {stateDropdownVisible ? <FaChevronUp /> : <FaChevronDown />}\n                    </button>\n                </div>\n    \n            {stateDropdownVisible && states.length > 0 && (\n                <ul className=\"dropdown-list\">\n                    {states.map((state, index) => (\n                        <li\n                            key={index}\n                            onClick={() => handleStateSelect(state)}\n                            className=\"dropdown-item\"\n                        >\n                            {state}\n                        </li>\n                    ))}\n                </ul>\n            )}\n\n          \n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}